import androidx.compose.runtime.mutableStateOf
import androidx.compose.ui.graphics.Color


//#####################################################################################################################
//#####################################################################################################################
//###############################                     База данных                       ###############################
//#####################################################################################################################
//####    Автор: Кулишов Илья Вячеславович    #########################################################################
//####    Версия: v.0.0.0.6                   #########################################################################
//####    Дата: 04.02.2024                    #########################################################################
//#####################################################################################################################
//#####################################################################################################################



data class AuthenticationState(
    val email: String? = null,
    val password: String? = null
)

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//класс для хранения тем                                                   ~~~~~~~~~~~~
//Поля:                                                                    ~~~~~~~~~~~~
//      mainColor: Color    - основной цвет                                ~~~~~~~~~~~~
//      secondColor:Color   - дополнительный цвет                          ~~~~~~~~~~~~
//      corpColor:Color     - корпоративный цвет                           ~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class Theme(mainColor: Color,secondColor:Color,corpColor:Color){
    var mainColor:Color=mainColor
    var secondColor:Color = secondColor
    var corpColor:Color=corpColor
}


//#####################################################################################
//Массив для хранения задач                                                ############
//#####################################################################################
var themes = listOf<Theme>(
    Theme(Color(245, 246, 247), Color.Black, Color(17, 69, 51))
)

//#####################################################################################
//Переменная для хранения корпоративного кода                              ############
//#####################################################################################
var corpKod = mutableStateOf("0")

//#####################################################################################
//Переменная для токена пользователя                                       ############
//#####################################################################################
var token = mutableStateOf("")


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//класс для хранения пользователей                                         ~~~~~~~~~~~~
//Поля:                                                                    ~~~~~~~~~~~~
//      id:Int                  -Индивидуальный номер                      ~~~~~~~~~~~~
//      name: String            - Имя                                      ~~~~~~~~~~~~
//      surname:String          - Фамилия                                  ~~~~~~~~~~~~
//      departament:String      - Отдел                                    ~~~~~~~~~~~~
//      photo:Int               - фото                                     ~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class User(id: Int,name:String, surname:String, departament:String, photo:Int){
    var id:Int = id
    var name:String=name
    var surname:String=surname
    var departament:String=departament
    var photo:Int=photo
}
//#####################################################################################
//Переменная текущего пользователя                                         ############
//#####################################################################################
var userList = mutableListOf( User(1, "Ivanov", "Ivan", "_0_1_", 0),
    User(2, "Petov", "Ivan", "_0_", 0),
    User(3, "Sidorow", "Ivan", "_0_2_", 0)

)
var userTek = 1
var adminTek=1
var userUpdateFlag = mutableStateOf(true)
var depUpdateFlag = mutableStateOf(true)
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//класс для хранения обращений                                             ~~~~~~~~~~~~
//Поля:                                                                    ~~~~~~~~~~~~
//      id:Int                  -Индивидуальный номер                      ~~~~~~~~~~~~
//      name:String             -Имя                                       ~~~~~~~~~~~~
//      author:String           -Автор                                     ~~~~~~~~~~~~
//      dep:Int                 -Департамент                               ~~~~~~~~~~~~
//      answerPep:String        -Автор ответа                              ~~~~~~~~~~~~
//      status:Int              -Статус                                    ~~~~~~~~~~~~
//      description:String      -Описание                                  ~~~~~~~~~~~~
//      answerText:String       -Ответ                                     ~~~~~~~~~~~~
//      file1:String            -Файл автора заявки                        ~~~~~~~~~~~~
//      file2:String            -Файл ответа                               ~~~~~~~~~~~~
//      view:Boolean            -Видимость заявки                          ~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class ApplicData(id:Int, name:String, author:Int, dep:Int, answerPep:Int, status:Int,
                 description:String, answerText:String, file1:String, file2:String, view:Boolean){
    var id:Int = id
    var name:String=name
    var author:Int=author
    var dep:Int= dep
    var answerPep:Int = answerPep
    var status:Int = status
    var description:String=description
    var answerText:String=answerText
    var file1:String=file1
    var file2:String=file2
    var view:Boolean=view
}

//#####################################################################################
//Массив для хранения заявок                                               ############
//#####################################################################################
var ApllicArray = listOf(
    ApplicData(0,"Сломался стул", 1, 0, 1,1,
        "Ну это такое дело стул сломался я сидел качался а он пук и все и мы все обосрались иоалраолыраорлаоылоаыовлралыаоылоаыволовыарылраыоралыралоывлвал","","","", true),

    )


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//класс для хранения отделов                                               ~~~~~~~~~~~~
//Поля:                                                                    ~~~~~~~~~~~~
//      id:Int          -Код отдела                                        ~~~~~~~~~~~~
//      name:String     -Имя отдела                                        ~~~~~~~~~~~~
//      pepId:Int       -Админы отдела                                     ~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class Dep(id:Int, name:String, pepId:Int){
    var id:Int=id
    var name:String=name
    var pepId:Int = pepId
}

//#####################################################################################
//Массив для хранения отделов                                              ############
//#####################################################################################
var depList = listOf(
    Dep(0,"Мои заявки",0),
    Dep(1,"Отдел по закупке",0),
    Dep(2,"Отдел по продажу",0)
)

var createDepFlag = mutableStateOf(false)
class Category(name:String,  state:Boolean){
    var name:String=name
    var state:Boolean=state
}

var categoryList = listOf(
    Category("Стулья", false),
    Category("Стулья", false),
    Category("Стулья", false),
)

var newProfi = mutableStateOf("")

var urlDefault = "https://409b-95-174-107-148.ngrok-free.app/"
var urllogin = urlDefault + "login"
var urlRegist = urlDefault + "register"
var urlUserData=urlDefault + "user-data"

var myName = mutableStateOf("1")
var mySurname = mutableStateOf("1")